[{"path":"https://hadley.github.io/elmer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 elmer authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hadley.github.io/elmer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hadley Wickham. Author, maintainer. Posit Software, PBC. Copyright holder, funder.","code":""},{"path":"https://hadley.github.io/elmer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wickham H (2024). elmer: Call LLM APIs R. R package version 0.0.0.9000, https://hadley.github.io/elmer/, https://github.com/hadley/elmer.","code":"@Manual{,   title = {elmer: Call LLM APIs from R},   author = {Hadley Wickham},   year = {2024},   note = {R package version 0.0.0.9000, https://hadley.github.io/elmer/},   url = {https://github.com/hadley/elmer}, }"},{"path":"https://hadley.github.io/elmer/index.html","id":"elmer","dir":"","previous_headings":"","what":"Call LLM APIs from R","title":"Call LLM APIs from R","text":"goal elmer provide user friendly wrapper common APIs calling llm’s. Major design goals include support streaming making easy register call R functions.","code":""},{"path":"https://hadley.github.io/elmer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Call LLM APIs from R","text":"can install development version elmer GitHub :","code":"# install.packages(\"pak\") pak::pak(\"hadley/elmer\")"},{"path":"https://hadley.github.io/elmer/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Call LLM APIs from R","text":"use elmer, need OpenAI API key. can get one developer console. save value OPENAI_API_KEY environment variable ~/.Renviron (easy way open file call usethis::use_renviron()).","code":""},{"path":"https://hadley.github.io/elmer/reference/elmer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"elmer: Call LLM APIs from R — elmer-package","title":"elmer: Call LLM APIs from R — elmer-package","text":"consistent interface calling LLM APIs. Includes support streaming.","code":""},{"path":[]},{"path":"https://hadley.github.io/elmer/reference/elmer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"elmer: Call LLM APIs from R — elmer-package","text":"Maintainer: Hadley Wickham hadley@rstudio.com contributors: RStudio [copyright holder, funder]","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"function returns R6 object takes care managing state associated chat; .e. records messages send server, messages receive back. register tool (aka R function), also takes care tool loop.","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"","code":"new_chat_openai(   system_prompt = NULL,   base_url = \"https://api.openai.com/v1\",   api_key = openai_key(),   model = \"gpt-4o-mini\",   quiet = FALSE )"},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"system_prompt system prompt set behavior assistant. base_url base URL endpoint; default uses ChatGPT. api_key API key use authentication. generally supply directly, instead set OPENAI_API_KEY environment variable. model model use chat; defaults GPT-4o mini. quiet TRUE print output received.","code":""},{"path":[]},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"ChatOpenAI$new() ChatOpenAI$chat() ChatOpenAI$register_tool() ChatOpenAI$clone()","code":""},{"path":[]},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"","code":"ChatOpenAI$new(base_url, model, api_key, system_prompt, quiet = TRUE)"},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"method-chat-","dir":"Reference","previous_headings":"","what":"Method chat()","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"Submit text chatbot.","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"","code":"ChatOpenAI$chat(text, stream = TRUE)"},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"text text send chatbot stream Whether stream response .","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"method-register-tool-","dir":"Reference","previous_headings":"","what":"Method register_tool()","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"Register tool (R function) chatbot can use. chatbot decides use function, elmer automatically call submit results back.","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"","code":"ChatOpenAI$register_tool(name, description, arguments, strict = TRUE)"},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"name name function. description detailed description function . Generally, information can provide , better. arguments list arguments function accepts. list objects created tool_arg(). strict argument definition strictly enforced?","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"objects class cloneable method.","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"","code":"ChatOpenAI$clone(deep = FALSE)"},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"deep Whether make deep clone.","code":""},{"path":"https://hadley.github.io/elmer/reference/new_chat_openai.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a chatbot that speaks to an OpenAI compatible endpoint — new_chat_openai","text":"","code":"if (FALSE) { # elmer:::openai_key_exists() chat <- new_chat_openai() chat$chat(\"   What is the difference between a tibble and a data frame?   Answer with a bulleted list \")  chat <- new_chat_openai() chat$register_tool(   name = \"rnorm\",   description = \"Drawn numbers from a random normal distribution\",   arguments = list(     tool_arg(       \"n\",       type = \"integer\",       description = \"The number of observations. Must be a positive integer.\"     ),     tool_arg(       \"mean\",       type = \"number\",       description = \"The mean value of the distribution.\"     ),     tool_arg(       \"sd\",       type = \"number\",       description = \"The standard deviation of the distribution. Must be a non-negative number.\"     )   ) ) chat$chat(\"   Give me five numbers from a random normal distribution.   Briefly explain your work. \") }"},{"path":"https://hadley.github.io/elmer/reference/tool_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Define arguments for a tool — tool_arg","title":"Define arguments for a tool — tool_arg","text":"Define arguments tool","code":""},{"path":"https://hadley.github.io/elmer/reference/tool_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define arguments for a tool — tool_arg","text":"","code":"tool_arg(name, type, description, required = TRUE)"},{"path":"https://hadley.github.io/elmer/reference/tool_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define arguments for a tool — tool_arg","text":"name Name argument type Argument type. description Description argument free text. required argument required?","code":""}]
